# This is a basic workflow to help you get started with Actions

name: Main

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  #    tags: [ "*" ]
  #  pull_request:
  #    branches: [ "*" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
#job 可以通过 needs 添加依赖
jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 8 ]
        jpa-implements: [ hibernate,eclipseLink ]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v3.5.1
        with:
          java-version: ${{ matrix.java-version }}
          distribution: corretto
      - run: java -version
      - name: Build
        env:
          ORG_GRADLE_PROJECT_jpaImpl: ${{ matrix.jpa-implements }}
        run: ./gradlew test

  # This workflow contains a single job called "build"
  build:
    needs: test
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 8 ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v3.5.1
        with:
          java-version: ${{ matrix.java-version }}
          distribution: corretto
      - run: java -version
      - name: Build
        env:
          secretKeyRingFileBase64: ${{ secrets.secretKeyRingFileBase64 }}
          mavenUsername: ${{ secrets.MAVEN_USERNAME }}
          mavenPassword: ${{ secrets.MAVEN_PASSWORD }}
          keyId: ${{ secrets.keyId }}
          password: ${{ secrets.password }}
        run: |
          echo "$secretKeyRingFileBase64"|base64 --decode > ./s.gpg
          ORG_GRADLE_PROJECT_OSSRHUsername="$mavenUsername" ORG_GRADLE_PROJECT_OSSRHPassword="$mavenPassword"  ./gradlew -Psigning.keyId="$keyId" -Psigning.password="$password" -Psigning.secretKeyRingFile="`pwd`/s.gpg" -i --warning-mode all publish
          
      
